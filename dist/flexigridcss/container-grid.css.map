{"version":3,"sources":["flexigridcss/base/_container-grid.scss","utlities/mixins/_media-queries.scss","utlities/_vars.scss","flexigridcss/container-grid.css"],"names":[],"mappings":"AACA;;;EACE,aAAY;EACZ,cAAa;EACb,aAAY;EACZ,YAAW;EACX,iBAAgB;EAChB,aAAY;EACZ,mBAAkB;CACnB;;AAMC;;EACE,kBAAa;EAAb,cAAa;CAkDd;;ACfD;EDpCA;;IAKI,2BAAwD;QAAxD,sCAAwD;IACxD,gCAAgD;IAChD,gBEfkB;GF2DrB;CG1CF;;AFAG;EDTF;;IAUI,2BAAiE;QAAjE,sCAAiE;IACjE,gCAAyD;IACzD,gBEnB2B;GF0D9B;CGjCF;;AFTG;EDTF;;IAgBI,4BAAkE;QAAlE,uCAAkE;IAClE,kCAA0D;IAC1D,kBExB8B;GFyDjC;CGxBF;;AFlBG;EDTF;;IAqBI,4BAAyD;QAAzD,uCAAyD;IACzD,kCAAiD;IACjD,kBE5BqB;GFwDxB;CGfF;;AF3BG;EDTF;;IA0BI,4BAA6D;QAA7D,uCAA6D;IAC7D,kCAAqD;IACrD,kBEhCyB;GFuD5B;CGNF;;AH7CE;;EAgCG,oBAAmB;CAkBpB;;ACdH;EDpCC;;IAmCK,gBAAgC;GAenC;CGOJ;;AFhDG;EDTD;;IAsCK,gBAAyC;GAY5C;CGcJ;;AFvDG;EDTD;;IA0CK,kBAA0C;GAQ7C;CGqBJ;;AF9DG;EDTD;;IA6CK,kBAAiC;GAKpC;CG4BJ;;AFrEG;EDTD;;IAgDK,kBAAqC;GAExC;CGmCJ;;AH/BD;EACE,YAAW;EACX,gBAAe;EACf,kBAAqC;CAkCtC;;ACvDC;EDkBF;IAMI,YAAW;IACX,gBAAe;IACf,gBAAgC;GA6BnC;CGQA;;AF1FG;ED6CJ;IAYI,aAAY;IACZ,iBAAgB;IAChB,gBAAyC;GAuB5C;CGgBA;;AFlGG;ED6CJ;IAkBI,aAAY;IACZ,iBAAgB;IAChB,kBAA0C;GAiB7C;CGwBA;;AF1GG;ED6CJ;IAuBI,cAAa;IACb,kBAAiB;IACjB,kBAAiC;GAYpC;CGgCA;;AFlHG;ED6CJ;IA4BI,cAAa;IACb,kBAAiB;IACjB,kBAAqC;GAOxC;CGwCA;;AH3C8B;EAlC/B;IAmCI,eAAc;GAEjB;CG8CA;;AH5CD;EACE,YAAW;EACX,gBAAe;CAwBhB;;ACnFC;EDyDF;IAKI,gBAAgC;GAqBnC;CG6BA;;AF3IG;EDoFJ;IASI,gBAAyC;GAiB5C;CGmCA;;AFjJG;EDoFJ;IAaI,kBAA0C;GAa7C;CGyCA;;AFvJG;EDoFJ;IAgBI,kBAAiC;GAUpC;CG+CA;;AF7JG;EDoFJ;IAmBI,kBAAqC;GAOxC;CGqDA;;AHxD8B;EAvB/B;IAwBI,eAAc;GAEjB;CG2DA;;AF9IC;EDqFF;IAEI,yBAAyC;GAkB5C;CG2CA;;AF/KG;EDgHJ;IAMI,yBAAkD;GAcrD;CGiDA;;AFrLG;EDgHJ;IAUI,2BAAmD;GAUtD;CGuDA;;AF3LG;EDgHJ;IAcI,2BAA0C;GAM7C;CG6DA;;AFjMG;EDgHJ;IAkBI,2BAA8C;GAEjD;CGmEA","file":"container-grid.css","sourcesContent":["// Container will always be grid... If not supported then it will just be the width it needs to be...\n%container-core {\n  margin: auto;\n  min-height: 0;\n  min-width: 0;\n  width: 100%;\n  max-height: 100%;\n  height: 100%;\n  position: relative;\n}\n\n.container,\n.container-fluid {\n  @extend %container-core;\n\n  &--grid {\n    display: grid;\n    @extend %container-core;\n\n    @include mobile-only {\n      grid-template-columns: repeat($grid-columns-mobile, 1fr);\n      grid-column-gap: calc(#{$grid-space-mobile} * 2);\n      padding: 0 $grid-space-mobile;\n    }\n    @include tablet-portrait-up {\n      grid-template-columns: repeat($grid-columns-portrait-tablet, 1fr);\n      grid-column-gap: calc(#{$grid-space-portrait-tablet} * 2);\n      padding: 0 $grid-space-portrait-tablet;\n    }\n\n    @include tablet-landscape-up {\n      grid-template-columns: repeat($grid-columns-landscape-tablet, 1fr);\n      grid-column-gap: calc(#{$grid-space-landscape-tablet} * 2);\n      padding: 0 $grid-space-landscape-tablet;\n    }\n    @include desktop-up {\n      grid-template-columns: repeat($grid-columns-desktop, 1fr);\n      grid-column-gap: calc(#{$grid-space-desktop} * 2);\n      padding: 0 $grid-space-desktop;\n    }\n    @include big-desktop-up {\n      grid-template-columns: repeat($grid-columns-big-desktop, 1fr);\n      grid-column-gap: calc(#{$grid-space-big-desktop} * 2);\n      padding: 0 $grid-space-big-desktop;\n    }\n\n    .row {\n      grid-column: 1 / -1;\n\n      @include mobile-only {\n        margin: 0 #{-$grid-space-mobile};\n      }\n      @include tablet-portrait-up {\n        margin: 0 #{-$grid-space-portrait-tablet};\n      }\n\n      @include tablet-landscape-up {\n        margin: 0 #{-$grid-space-landscape-tablet};\n      }\n      @include desktop-up {\n        margin: 0 #{-$grid-space-desktop};\n      }\n      @include big-desktop-up {\n        margin: 0 #{-$grid-space-big-desktop};\n      }\n    }\n  }\n}\n\n.container {\n  width: 100%;\n  max-width: 100%;\n  padding: 0 #{$grid-space-big-desktop};\n\n  @include mobile-only {\n    width: 100%;\n    max-width: 100%;\n    padding: 0 #{$grid-space-mobile};\n  }\n\n  @include tablet-portrait-up {\n    width: 600px;\n    max-width: 600px;\n    padding: 0 #{$grid-space-portrait-tablet};\n  }\n\n  @include tablet-landscape-up {\n    width: 900px;\n    max-width: 900px;\n    padding: 0 #{$grid-space-landscape-tablet};\n  }\n  @include desktop-up {\n    width: 1200px;\n    max-width: 1200px;\n    padding: 0 #{$grid-space-desktop};\n  }\n  @include big-desktop-up {\n    width: 1800px;\n    max-width: 1800px;\n    padding: 0 #{$grid-space-big-desktop};\n  }\n\n  // If doesn't support grid display: block;\n  @supports not (display: grid) {\n    display: block;\n  }\n}\n\n.container-fluid {\n  width: 100%;\n  max-width: 100%;\n\n  @include mobile-only {\n    padding: 0 #{$grid-space-mobile};\n  }\n\n  @include tablet-portrait-up {\n    padding: 0 #{$grid-space-portrait-tablet};\n  }\n\n  @include tablet-landscape-up {\n    padding: 0 #{$grid-space-landscape-tablet};\n  }\n  @include desktop-up {\n    padding: 0 #{$grid-space-desktop};\n  }\n  @include big-desktop-up {\n    padding: 0 #{$grid-space-big-desktop};\n  }\n\n  // If doesn't support grid display: block;\n  @supports not (display: grid) {\n    display: block;\n  }\n}\n\n.grid-gap {\n  @include mobile-only {\n    grid-gap: calc(#{$grid-space-mobile} * 2);\n  }\n\n  @include tablet-portrait-up {\n    grid-gap: calc(#{$grid-space-portrait-tablet} * 2);\n  }\n\n  @include tablet-landscape-up {\n    grid-gap: calc(#{$grid-space-landscape-tablet} * 2);\n  }\n\n  @include desktop-up {\n    grid-gap: calc(#{$grid-space-desktop} * 2);\n  }\n\n  @include big-desktop-up {\n    grid-gap: calc(#{$grid-space-big-desktop} * 2);\n  }\n}\n","// ----------------------------------------------------------------------\n// BREAKPOINTS\n// ----------------------------------------------------------------------\n\n$break-xxs: 375 !default; // from \"phone portrait\" size\n$break-xs: 568 !default; // from \"phone landscape\" size\n$break-small: 768 !default; // from \"tablet portrait\" size\n$break-medium: 1024 !default; // from \"desktop\" size\n$break-large: 1280 !default; // from bigger desktop size\n\n$break-points-map: (\n  xxs: $break-xxs,\n  xs: $break-xs,\n  small: $break-small,\n  medium: $break-medium,\n  large: $break-large\n);\n\n@function getBreakpoint($key) {\n  @return map-get($break-points-map, $key);\n}\n\n@mixin breakpoint($width) {\n  @if type-of($width) == number {\n    @media only screen and (min-width: $width*1px) {\n      @content;\n    }\n  } @else {\n    $break: getBreakpoint($width);\n    @media only screen and (min-width: $break*1px) {\n      @content;\n    }\n  }\n}\n\n@mixin breakpoint-between($min, $max) {\n  $minWidth: $min;\n  $maxWidth: $max;\n  @if type-of($min) != number {\n    $minWidth: getBreakpoint($min);\n  }\n  @if type-of($max) != number {\n    $maxWidth: getBreakpoint($max);\n  }\n  @media only screen and (min-width: $minWidth*1px) and (max-width: ($maxWidth*1px) - 1) {\n    @content;\n  }\n}\n\n// (max-width: 567px)\n@mixin mobile-only {\n  @media #{$mobile-only} {\n    @content;\n  }\n}\n\n// (min-width: 568px)\n@mixin tablet-portrait-up {\n  @include breakpoint(568) {\n    @content;\n  }\n}\n\n// (max-width: 568px)\n@mixin tablet-portrait-down {\n  @media #{$tablet-portrait-down} {\n    @content;\n  }\n}\n\n// (min-width: 768px)\n@mixin tablet-landscape-up {\n  @include breakpoint(768) {\n    @content;\n  }\n}\n\n// (max-width: 768px)\n@mixin tablet-landscape-down {\n  @media #{$tablet-landscape-down} {\n    @content;\n  }\n}\n\n// (min-width: 1024ox)\n@mixin desktop-up {\n  @include breakpoint(1024) {\n    @content;\n  }\n}\n\n// (max-width: 1024px)\n@mixin desktop-down {\n  @media #{$desktop-down} {\n    @content;\n  }\n}\n\n// (min-width: 1280px)\n@mixin big-desktop-up {\n  @include breakpoint(1280) {\n    @content;\n  }\n}\n\n// (max-width: 1280px)\n@mixin big-desktop-down {\n  @media #{$big-desktop-up} {\n    @content;\n  }\n}\n","// Grid\n$grid-columns-mobile: 4;\n$grid-columns-portrait-tablet: 8;\n$grid-columns-landscape-tablet: 10;\n$grid-columns-desktop: 12;\n$grid-columns-big-desktop: 16;\n\n$grid-space-mobile: 1rem;\n$grid-space-portrait-tablet: 1rem;\n$grid-space-landscape-tablet: 1.5rem;\n$grid-space-desktop: 1.5rem;\n$grid-space-big-desktop: 1.8rem;\n\n// Fonts\n$font-default: \"Helvetica\", Helvetica Neue, Arial, sans-serif;\n$font-monospace: monospace, monoszpace;\n\n$font-heading-1: 4.8rem;\n$font-heading-2: 3.4rem;\n$font-heading-3: 2.4rem;\n$font-heading-4: 1.6rem;\n$font-heading-5: 1.4rem;\n$font-heading-6: 1.2rem;\n$font-body: 1.6rem;\n\n$font-weight-base: normal;\n\n$line-height-base: 1.6;\n\n$headings-margin-bottom: 2rem;\n$paragraph-margin-bottom: 2rem;\n$list-margin-bottom: 2rem;\n\n$table-cell-padding: 1rem;\n\n$label-margin-bottom: 1rem;\n\n// Colors\n$color-white: white;\n$color-black: black;\n$color-light-gray-1: #F5F5F5;\n$color-mid-gray-1: #BDBDBD;\n$color-dark-gray-1: #424242;\n$color-dark-gray-2: #212121;\n\n$color-primary: #ff5c5c;\n$color-secondary: #3F51B5;\n$color-success: #4CAF50;\n$color-warning: #FFEB3B;\n$color-warning-dark: #ffb300;\n$color-danger: #FF3D00;\n$color-info: #B3E5FC;\n$color-default: #CFD8DC;\n\n$link-color: #2196F3;\n$link-hover-color: darken($link-color, 50%);\n$link-decoration: none;\n$link-hover-decoration: underline;\n\n$table-caption-color: $color-dark-gray-1;\n\n// Borders\n$border-width: 2px;\n$border-style: solid;\n\n$radius-circle: 50%;\n$radius-rounded: 5px;\n\n$transition-slow: .8s ease;\n$transition-normal: .4s ease;\n$transition-fast: .2s ease;\n\n$transition-all: .4s all;\n\n$spacing-small: 3rem;\n$spacing-base: 5rem;\n$spacing-large: 8rem;\n\n// Media Query Values\n\n$tablet-portrait-up: (min-width: 568px);\n$tablet-landscape-up: (min-width: 768px);\n$desktop-up: (min-width: 1024px);\n$big-desktop-up: (min-width: 1280px);\n\n$mobile-only: (max-width: 375px);\n$tablet-portrait-down: (max-width: 568px);\n$tablet-landscape-down: (max-width: 768px);\n$desktop-down: (max-width: 1024px);\n$big-desktop-down: (max-width: 1280px);\n\n$center: translate(-50%, -50%);\n$centerY: translateY(-50%);\n$centerX: translateX(-50%);\n",".container,\n.container-fluid, .container--grid,\n.container-fluid--grid {\n  margin: auto;\n  min-height: 0;\n  min-width: 0;\n  width: 100%;\n  max-height: 100%;\n  height: 100%;\n  position: relative;\n}\n\n.container--grid,\n.container-fluid--grid {\n  display: grid;\n}\n\n@media (max-width: 375px) {\n  .container--grid,\n  .container-fluid--grid {\n    grid-template-columns: repeat(4, 1fr);\n    grid-column-gap: calc(1rem * 2);\n    padding: 0 1rem;\n  }\n}\n\n@media only screen and (min-width: 568px) {\n  .container--grid,\n  .container-fluid--grid {\n    grid-template-columns: repeat(8, 1fr);\n    grid-column-gap: calc(1rem * 2);\n    padding: 0 1rem;\n  }\n}\n\n@media only screen and (min-width: 768px) {\n  .container--grid,\n  .container-fluid--grid {\n    grid-template-columns: repeat(10, 1fr);\n    grid-column-gap: calc(1.5rem * 2);\n    padding: 0 1.5rem;\n  }\n}\n\n@media only screen and (min-width: 1024px) {\n  .container--grid,\n  .container-fluid--grid {\n    grid-template-columns: repeat(12, 1fr);\n    grid-column-gap: calc(1.5rem * 2);\n    padding: 0 1.5rem;\n  }\n}\n\n@media only screen and (min-width: 1280px) {\n  .container--grid,\n  .container-fluid--grid {\n    grid-template-columns: repeat(16, 1fr);\n    grid-column-gap: calc(1.8rem * 2);\n    padding: 0 1.8rem;\n  }\n}\n\n.container--grid .row,\n.container-fluid--grid .row {\n  grid-column: 1 / -1;\n}\n\n@media (max-width: 375px) {\n  .container--grid .row,\n  .container-fluid--grid .row {\n    margin: 0 -1rem;\n  }\n}\n\n@media only screen and (min-width: 568px) {\n  .container--grid .row,\n  .container-fluid--grid .row {\n    margin: 0 -1rem;\n  }\n}\n\n@media only screen and (min-width: 768px) {\n  .container--grid .row,\n  .container-fluid--grid .row {\n    margin: 0 -1.5rem;\n  }\n}\n\n@media only screen and (min-width: 1024px) {\n  .container--grid .row,\n  .container-fluid--grid .row {\n    margin: 0 -1.5rem;\n  }\n}\n\n@media only screen and (min-width: 1280px) {\n  .container--grid .row,\n  .container-fluid--grid .row {\n    margin: 0 -1.8rem;\n  }\n}\n\n.container {\n  width: 100%;\n  max-width: 100%;\n  padding: 0 1.8rem;\n}\n\n@media (max-width: 375px) {\n  .container {\n    width: 100%;\n    max-width: 100%;\n    padding: 0 1rem;\n  }\n}\n\n@media only screen and (min-width: 568px) {\n  .container {\n    width: 600px;\n    max-width: 600px;\n    padding: 0 1rem;\n  }\n}\n\n@media only screen and (min-width: 768px) {\n  .container {\n    width: 900px;\n    max-width: 900px;\n    padding: 0 1.5rem;\n  }\n}\n\n@media only screen and (min-width: 1024px) {\n  .container {\n    width: 1200px;\n    max-width: 1200px;\n    padding: 0 1.5rem;\n  }\n}\n\n@media only screen and (min-width: 1280px) {\n  .container {\n    width: 1800px;\n    max-width: 1800px;\n    padding: 0 1.8rem;\n  }\n}\n\n@supports not (display: grid) {\n  .container {\n    display: block;\n  }\n}\n\n.container-fluid {\n  width: 100%;\n  max-width: 100%;\n}\n\n@media (max-width: 375px) {\n  .container-fluid {\n    padding: 0 1rem;\n  }\n}\n\n@media only screen and (min-width: 568px) {\n  .container-fluid {\n    padding: 0 1rem;\n  }\n}\n\n@media only screen and (min-width: 768px) {\n  .container-fluid {\n    padding: 0 1.5rem;\n  }\n}\n\n@media only screen and (min-width: 1024px) {\n  .container-fluid {\n    padding: 0 1.5rem;\n  }\n}\n\n@media only screen and (min-width: 1280px) {\n  .container-fluid {\n    padding: 0 1.8rem;\n  }\n}\n\n@supports not (display: grid) {\n  .container-fluid {\n    display: block;\n  }\n}\n\n@media (max-width: 375px) {\n  .grid-gap {\n    grid-gap: calc(1rem * 2);\n  }\n}\n\n@media only screen and (min-width: 568px) {\n  .grid-gap {\n    grid-gap: calc(1rem * 2);\n  }\n}\n\n@media only screen and (min-width: 768px) {\n  .grid-gap {\n    grid-gap: calc(1.5rem * 2);\n  }\n}\n\n@media only screen and (min-width: 1024px) {\n  .grid-gap {\n    grid-gap: calc(1.5rem * 2);\n  }\n}\n\n@media only screen and (min-width: 1280px) {\n  .grid-gap {\n    grid-gap: calc(1.8rem * 2);\n  }\n}\n"]}